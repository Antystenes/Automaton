
==================== FINAL INTERFACE ====================
2017-01-09 19:26:40.774344096 UTC

interface main@main:Main 8001
  interface hash: f53ae508f76468263d13908646281411
  ABI hash: ecf4d123d06f4a30ccf86e0b49c191a6
  export-list hash: 78db1757949a8d2f016965571ef208d9
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 8430334d10a5417b3bfdf6e523e8aab6
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.main
module dependencies:
package dependencies: Automaton-0.1.0.0@Automaton-0.1.0.0-A8Lue7XUpdkBOExGdwpYs1
                      array-0.5.1.1@array-0.5.1.1 base-4.9.0.0*
                      binary-0.8.3.0@binary-0.8.3.0
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0 ghc-prim-0.5.0.0
                      hashable-1.2.4.0@hashable-1.2.4.0-GnltDttmBjG9qGzcjuPOH4
                      hashmap-1.3.1.1@hashmap-1.3.1.1-EsEoa0qXwh9DIEDzax73tQ
                      integer-gmp-1.0.0.1
                      split-0.2.3.1@split-0.2.3.1-IJKK4pOCYGKud0jZImZke
                      text-1.2.2.1@text-1.2.2.1-FgcR4Xf0VlEHD9HLxzq9WJ
orphans: base-4.9.0.0:GHC.Base base-4.9.0.0:GHC.Float
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         hashable-1.2.4.0@hashable-1.2.4.0-GnltDttmBjG9qGzcjuPOH4:Data.Hashable.Generic
         text-1.2.2.1@text-1.2.2.1-FgcR4Xf0VlEHD9HLxzq9WJ:Data.Text
         text-1.2.2.1@text-1.2.2.1-FgcR4Xf0VlEHD9HLxzq9WJ:Data.Text.Lazy
         text-1.2.2.1@text-1.2.2.1-FgcR4Xf0VlEHD9HLxzq9WJ:Data.Text.Show
family instance modules: base-4.9.0.0:Control.Applicative
                         base-4.9.0.0:Data.Complex base-4.9.0.0:Data.Either
                         base-4.9.0.0:Data.Functor.Const base-4.9.0.0:Data.Functor.Identity
                         base-4.9.0.0:Data.List.NonEmpty base-4.9.0.0:Data.Monoid
                         base-4.9.0.0:Data.Semigroup base-4.9.0.0:Data.Type.Equality
                         base-4.9.0.0:Data.Version base-4.9.0.0:Data.Void
                         base-4.9.0.0:GHC.Exts base-4.9.0.0:GHC.Generics
                         base-4.9.0.0:GHC.IO.Exception base-4.9.0.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         text-1.2.2.1@text-1.2.2.1-FgcR4Xf0VlEHD9HLxzq9WJ:Data.Text
                         text-1.2.2.1@text-1.2.2.1-FgcR4Xf0VlEHD9HLxzq9WJ:Data.Text.Lazy
import  -/  Automaton-0.1.0.0@Automaton-0.1.0.0-A8Lue7XUpdkBOExGdwpYs1:Lib bf820d6046142f50864c01c57096a402
import  -/  Automaton-0.1.0.0@Automaton-0.1.0.0-A8Lue7XUpdkBOExGdwpYs1:RegexpParser 5fd46b32d2ab42e3e6d43dc84d380206
import  -/  base-4.9.0.0:Data.Char eb33dc25ecb52d018a0ca26590e2b50b
import  -/  base-4.9.0.0:Data.Foldable 8aeb682f6c74f97fcf0ace0d608a43ea
import  -/  base-4.9.0.0:Data.Functor 6fc476505db88d678632a4a838125f13
import  -/  base-4.9.0.0:GHC.Base 8ed3be81c0707b322f975a84ae1bb816
import  -/  base-4.9.0.0:GHC.List 13d2451194c1c6e53b4f4f07947736dd
import  -/  base-4.9.0.0:GHC.Show 952347a6ab730bcb25c0854d8bc6ca51
import  -/  base-4.9.0.0:GHC.Unicode 2343b0871604cc5116abba8f24d75b42
import  -/  base-4.9.0.0:Prelude b9bddb97799837fe67a8d00939a5b6c3
import  -/  base-4.9.0.0:System.IO eb1d40aa793a4047069a5023f2ebcfe3
import  -/  ghc-prim-0.5.0.0:GHC.Types 7378e41b7749213c8c88ceb6b0665d4c
d6831ef04cb9301b090dfae6f7bb7ec7
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule2 Main.$trModule1) -}
847d9fc3b8e6f0b424199f36b4999bb2
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Main"#) -}
24ef6042833e75ffd7aa98b83ecca98d
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "main"#) -}
ad062649c082d4b194b4ccea7bf5b39c
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
6d5b99c8e4c6aed16d6034d6b885cf5e
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.IO.Handle.Internals.wantReadableHandle_1
                        @ GHC.Base.String
                        GHC.IO.Handle.Text.hGetLine4
                        GHC.IO.Handle.FD.stdin
                        GHC.IO.Handle.Text.hGetLine2
                          `cast`
                        (<GHC.IO.Handle.Types.Handle__>_R
                         ->_R Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R))
                        s of ds { (#,#) ipv ipv1 ->
                 let {
                   aut :: Lib.Automaton
                   = case RegexpParser.$wautomatonFromRegexp
                            ipv1 of ww { (#,,,#) ww1 ww2 ww3 ww4 ->
                     Lib.Automaton ww1 ww2 ww3 ww4 }
                 } in
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        (Lib.$fShowAutomaton_$cshow aut)
                        GHC.Types.True
                        ipv of ds1 { (#,#) ipv2 ipv3 ->
                 case Lib.readWords1 ipv2 of ds2 { (#,#) ipv4 ipv5 ->
                 letrec {
                   go :: [[GHC.Types.Char]]
                         -> [[GHC.Types.Char]]
                         -> GHC.Prim.State# GHC.Prim.RealWorld
                         -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                     {- Arity: 3, Strictness: <S,1*U><L,1*U><S,U> -}
                   = \ (ds3 :: [[GHC.Types.Char]])
                       (eta :: [[GHC.Types.Char]])
                       (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                     case ds3 of wild {
                       [] -> (# eta1, GHC.Tuple.() #)
                       : y ys
                       -> case eta of wild1 {
                            [] -> (# eta1, GHC.Tuple.() #)
                            : y1 ys1
                            -> case GHC.IO.Handle.Text.hPutStr2
                                      GHC.IO.Handle.FD.stdout
                                      (case aut of wild2 { Lib.Automaton ds4 ds5 ds6 ds7 ->
                                       case Lib.$wgo
                                              y
                                              ds4
                                              ds5
                                              ds6
                                              Lib.determinize10 of ww5 { (#,,,#) ww6 ww7 ww8 ww9 ->
                                       case Lib.$wisAccepted ww6 ww7 ww8 ww9 of wild3 {
                                         GHC.Types.False
                                         -> GHC.Base.++
                                              @ GHC.Types.Char
                                              Main.main3
                                              (GHC.CString.unpackAppendCString# " "# y1)
                                         GHC.Types.True
                                         -> GHC.Base.++
                                              @ GHC.Types.Char
                                              Main.main2
                                              (GHC.CString.unpackAppendCString# " "# y1) } } })
                                      GHC.Types.True
                                      eta1 of ds4 { (#,#) ipv6 ipv7 ->
                               go ys ys1 ipv6 } } }
                 } in
                 go ipv5 ipv5 ipv4 } } }) -}
da9cabaed18f8a3bfe5ee1ea08b0d7af
  main2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Base.map
                   @ GHC.Types.Char
                   @ GHC.Types.Char
                   GHC.Unicode.toUpper
                   GHC.Show.shows20) -}
7626e2d5ee18c27cee239d5b6c6d7ad4
  main3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Base.map
                   @ GHC.Types.Char
                   @ GHC.Types.Char
                   GHC.Unicode.toUpper
                   GHC.Show.shows21) -}
eea54415f7f78b18a54dde2cf866a86b
  main4 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

